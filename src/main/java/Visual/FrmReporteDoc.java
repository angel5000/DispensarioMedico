/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visual;

import Control.AdmCitasMedicas;
import Control.AdmHistMedico;
import Model.CitasMedicas;
import Model.HistorialMedico;
import java.awt.Font;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author angeldvvp
 */
public class FrmReporteDoc extends javax.swing.JFrame {

    /**
     * Creates new form FrmReporteDoc
     */
    int IDDOC=0;
      AdmCitasMedicas cm = new AdmCitasMedicas();
    public FrmReporteDoc(int id) {
        initComponents();
        Listar();
        IDDOC=id;
          tbdocct.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

     tbdocct.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    // Obtener la fila seleccionada
                    int selectedRow = tbdocct.getSelectedRow();

                    // Verificar si hay una fila seleccionada
                    if (selectedRow != -1) {
                        // Obtener los valores de las celdas en la fila seleccionada
                        // txardetal.setText("");
                        Object idcita=tbdocct.getValueAt(selectedRow, 0);
                        Object idpaciente=tbdocct.getValueAt(selectedRow, 1);
                        
                       
                          int idpc = ((Number) idpaciente).intValue();
                        try {
                            selectindex(IDDOC,idpc);
                            
                            /*
                            
                        */ } catch (SQLException ex) {
                            Logger.getLogger(FrmReporteDoc.class.getName()).log(Level.SEVERE, null, ex);
                        }
                       
                    }
                }
            }
     });
     
    }

    private FrmReporteDoc() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
public void selectindex(int iddoc,int idpaciente) throws SQLException{
        
              AdmHistMedico hm = new AdmHistMedico();
   SimpleDateFormat formatter =new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
       
    for(HistorialMedico dt : hm.getHistorialreg(idpaciente,iddoc)){
               
                    txtregicita.append("**********************HISTORIAL MEDICO***************"
                             + "*****************\n"+"FECHA CITA MEDICA:"+dt.getFechaVisita()+
                             "NOMBRE DEL PACIENTE:"+dt.getPaciente()+"\n NOMBRE DEL DOCTOR: "+dt.getMedico()+"\n"+
                             "SINTOMAS: "+dt.getSintomas()+"\n DIAGNOSTICO: "+dt.getDiagnostico()+"\nRECETA: "+dt.getReceta()
                                     +"\n*******"
                             + "********************"
                             + "*****************************".toUpperCase());
            }
     //     System.out.println(id+""+cm.MostrarDetCitasreg(idpaciente, 135));
                         for(CitasMedicas dt: cm.MostrarDetCitasreg(iddoc,idpaciente)){
                           
                              System.out.println(dt.getApellidos()+" "+dt.getNombresdoc()+"");
                             txtregicita.append("\n\n**********************DETALLES CITA MEDICA***************"
                             + "\n\n"+"*****************\n"+"IDCitaMedica:"+dt.getCodigCita()+
                             "\n NOMBRE DEL PACIENTE:"+dt.getApellidos()+" "+dt.getNombres()+
                                     "\n NOMBRE DEL DOCTOR: "+dt.getNombresdoc()+"\n"+
                             " ESPECIALIDAD: "+dt.getSpecialidad()+"\n FECHA CITA MEDICA: "+dt.getFechaHora()+
                                     "\n MOTIVO DE LA CITA: "+dt.getMotivos()
                                     +"\n*******"
                             + "********************"
                             + "*****************************".toUpperCase());
                             
                         }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    
    
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tbdocct = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtregicita = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(50, 150));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 0, 18)); // NOI18N
        jLabel4.setText("Registro de citas medicas realizadas");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Citas"));

        tbdocct.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        tbdocct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Cita", "IdPaciente", "Nombres Paciente", "Cedula", "Fecha Y Hora Cita", "Motivo Cita", "Costo", "Estado", "Fecha Finalizacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(tbdocct);
        if (tbdocct.getColumnModel().getColumnCount() > 0) {
            tbdocct.getColumnModel().getColumn(0).setMaxWidth(55);
            tbdocct.getColumnModel().getColumn(1).setMaxWidth(50);
            tbdocct.getColumnModel().getColumn(2).setMaxWidth(450);
            tbdocct.getColumnModel().getColumn(3).setMaxWidth(350);
            tbdocct.getColumnModel().getColumn(4).setMaxWidth(350);
            tbdocct.getColumnModel().getColumn(5).setMaxWidth(300);
            tbdocct.getColumnModel().getColumn(6).setMaxWidth(50);
            tbdocct.getColumnModel().getColumn(7).setMaxWidth(250);
            tbdocct.getColumnModel().getColumn(8).setMaxWidth(310);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles Registro Citas"));

        txtregicita.setEditable(false);
        txtregicita.setColumns(20);
        txtregicita.setRows(5);
        jScrollPane1.setViewportView(txtregicita);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void Listar() {
    DefaultTableModel TB = (DefaultTableModel)  tbdocct.getModel();
       TB.setRowCount(0);
   
   SimpleDateFormat formatter =new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
      // System.out.println(idmed+"");
              
    for(CitasMedicas dt :  cm.regtabcitas(135,3)){
        
          String fecha= formatter.format(dt.getFechaHora());
          
           
                TB.addRow(new Object[]{dt.getCodigCita(),dt.getIdPaciente(),dt.getNombres()+" "+dt.getApellidos(),
                dt.getCedula(),fecha,dt.getMotivos(),dt.getCosto(),dt.getDisponible(), dt.getFechafin()});
                
                int tamaño = tamañofila( tbdocct.getFont());
      tbdocct.setRowHeight(tamaño);
      TB.fireTableDataChanged();
            }

    

}
 private int tamañofila(Font font) {
        
        int incrementa = 6;
        return font.getSize() + incrementa;
    }
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmReporteDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmReporteDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmReporteDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReporteDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmReporteDoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JTable tbdocct;
    private javax.swing.JTextArea txtregicita;
    // End of variables declaration//GEN-END:variables
}
